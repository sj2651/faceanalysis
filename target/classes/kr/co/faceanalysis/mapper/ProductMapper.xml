<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductMapper">

	<select id="findAllProduct" resultType="pvo">
		<bind name="start" value="(pg - 1) * sz" />
		SELECT p_no, p_brand, p_cate, p_name, p_img, p_grade FROM products
		<if test="sb == 1"> AND p_brand = #{st}) > 0 </if>
		<if test="sb == 2"> AND INSTR(p_cate, #{st}) > 0</if>
		<if test="sb == 3"> AND INSTR(p_name, #{st}) > 0</if>
		ORDER BY
		<choose>
			<when test="ob == 1">p_no</when>
			<otherwise>p_no DESC</otherwise>
		</choose>
		LIMIT ${start}, ${sz}
	</select>

	<select id="count" resultType="int">
		SELECT COUNT(p_no)
		FROM products
		<if test="sb == 1"> AND p_brand = #{st}) > 0 </if>
		<if test="sb == 2"> AND INSTR(p_cate, #{st}) > 0</if>
		<if test="sb == 3"> AND INSTR(p_name, #{st}) > 0</if>
	</select>

	<select id="findByAroma" resultType="pvo">
		<bind name="start" value="(pg - 1) * sz" />
		SELECT p_no, p_brand,
		p_cate, p_name, p_img, p_grade FROM products
		WHERE p_brand = 'aromatica'
		ORDER BY p_no ASC
		LIMIT ${start}, ${sz}
	</select>
	
	<select id="findByApril" resultType="pvo">
		<bind name="start" value="(pg - 1) * sz" />
		SELECT p_no, p_brand,
		p_cate, p_name, p_img, p_grade FROM products
		WHERE p_brand = 'aprilskin'
		ORDER BY p_no ASC
		LIMIT ${start}, ${sz}
	</select>
	
	<select id="findByBbia" resultType="pvo">
		<bind name="start" value="(pg - 1) * sz" />
		SELECT p_no, p_brand,
		p_cate, p_name, p_img, p_grade FROM products
		WHERE p_brand = 'bbia'
		ORDER BY p_no ASC
		LIMIT ${start}, ${sz}
	</select>
	
	<select id="findByMili" resultType="pvo">
		<bind name="start" value="(pg - 1) * sz" />
		SELECT p_no, p_brand,
		p_cate, p_name, p_img, p_grade FROM products
		WHERE p_brand = 'milimage'
		ORDER BY p_no ASC
		LIMIT ${start}, ${sz}
	</select>


	<select id="findByBrandOrCate" resultType="pvo">
		SELECT p_no, p_brand,
		p_cate, p_name, p_img, p_grade FROM products
		WHERE p_brand = #{p_brand}
		AND p_cate = #{p_cate}
		ORDER BY p_no ASC
	</select>

	<select id="findByBase" resultType="pvo">
		<bind name="start" value="(pg - 1) * sz" />
		SELECT p_no, p_brand, p_cate,
		p_name, p_img, p_grade FROM products
		WHERE p_cate = 'base'
		ORDER BY
		p_no ASC
		LIMIT ${start}, ${sz}
	</select>
	
	<select id="findByMakeup" resultType="pvo">
		<bind name="start" value="(pg - 1) * sz" />
		SELECT p_no, p_brand, p_cate,
		p_name, p_img, p_grade FROM products
		WHERE p_cate = 'makeup'
		ORDER BY
		p_no ASC
		LIMIT ${start}, ${sz}
	</select>
	
	<select id="findByHairbody" resultType="pvo">
		<bind name="start" value="(pg - 1) * sz" />
		SELECT p_no, p_brand, p_cate,
		p_name, p_img, p_grade FROM products
		WHERE p_cate = 'hairbody'
		ORDER BY
		p_no ASC
		LIMIT ${start}, ${sz}
	</select>
	
	<select id="findBySkincare" resultType="pvo">
		<bind name="start" value="(pg - 1) * sz" />
		SELECT p_no, p_brand, p_cate,
		p_name, p_img, p_grade FROM products
		WHERE p_cate = 'skincare'
		ORDER BY
		p_no ASC
		LIMIT ${start}, ${sz}
	</select>

	<select id="findByName" resultType="pvo">
		SELECT p_no, p_brand, p_cate,
		p_name, p_img, p_grade FROM products
		WHERE p_name = #{p_name}
		ORDER BY
		p_no ASC
	</select>

	<select id="findById" resultType="pvo">
		SELECT * FROM products
		WHERE
		p_no = #{p_no}
	</select>

	<insert id="insert" useGeneratedKeys="true" keyProperty="p_no">
		INSERT
		products (M_NO, P_BRAND, P_CATE, P_NAME, P_IMG, P_DETAIL, P_GRADE,
		P_REG)
		VALUES (9999, #{p_brand}, #{p_cate}, #{p_name}, #{p_img},
		#{p_detail}, #{p_grade}, NOW())
	</insert>

	<update id="update">
		UPDATE products SET
		P_BRAND = #{p_brand},
		P_CATE =
		#{p_cate},
		P_NAME = #{p_name},
		P_IMG = #{p_img},
		P_DETAIL = #{p_detail},
		P_GRADE = #{p_grade},
		P_REG = NOW()
		WHERE P_NO = #{p_no}
	</update>

	<delete id="delete">
		DELETE FROM products WHERE P_NO = #{p_no}
	</delete>
</mapper>